{"version":3,"sources":["pages/Profile/index.module.css","pages/Profile/index.js"],"names":["module","exports","menus","id","name","iconfont","to","DEFAULT_AVATAR","BASE_URL","alert","Profile","state","isLogin","isAuth","userInfo","avatar","nickname","logout","text","onPress","a","API","post","headers","authorization","getToken","removeToken","setState","this","getUserInfo","get","res","data","status","body","history","props","className","styles","root","title","bg","src","alt","info","myIcon","user","auth","onClick","edit","arrow","type","size","inline","push","columnNum","hasLine","renderItem","item","menuItem","ad","Component"],"mappings":"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","file":"static/js/21.6482bc0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Profile_title__3NHUZ\",\"bg\":\"Profile_bg__3ku-l\",\"info\":\"Profile_info__1tsln\",\"auth\":\"Profile_auth__3pFNq\",\"user\":\"Profile_user__cbf5a\",\"myIcon\":\"Profile_myIcon__2z3az\",\"avatar\":\"Profile_avatar__3LxRS\",\"name\":\"Profile_name__hMWoY\",\"edit\":\"Profile_edit__3Z3h-\",\"arrow\":\"Profile_arrow__3umfk\",\"ad\":\"Profile_ad__2GfLY\",\"menuItem\":\"Profile_menuItem__1kTS5\"};","import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { Grid, Button, Modal } from 'antd-mobile'\r\n\r\nimport { BASE_URL, isAuth, getToken, removeToken, API } from '../../utils'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 菜单数据\r\nconst menus = [\r\n  { id: 1, name: '我的收藏', iconfont: 'icon-coll', to: '/favorate' },\r\n  { id: 2, name: '我的出租', iconfont: 'icon-ind', to: '/rent' },\r\n  { id: 3, name: '看房记录', iconfont: 'icon-record' },\r\n  {\r\n    id: 4,\r\n    name: '成为房主',\r\n    iconfont: 'icon-identity'\r\n  },\r\n  { id: 5, name: '个人资料', iconfont: 'icon-myinfo' },\r\n  { id: 6, name: '联系我们', iconfont: 'icon-cust' }\r\n]\r\n\r\n// 默认头像\r\nconst DEFAULT_AVATAR = BASE_URL + '/img/profile/avatar.png'\r\nconst alert = Modal.alert\r\n/* \r\n  1 给退出按钮绑定单击事件，创建方法 logout 作为事件处理程序。\r\n  2 导入 Modal 对话框组件（文档）。\r\n  3 在方法中，拷贝 Modal 组件文档中确认对话框的示例代码。\r\n  4 修改对话框的文字提示。\r\n  5 在退出按钮的事件处理程序中，先调用退出接口（让服务端退出），再移除本地token（本地退出）。\r\n  6 将登陆状态 isLogin 设置为 false。\r\n  7 清空用户状态对象。\r\n*/\r\n\r\n/* \r\n  1 在 state 中添加两个状态：isLogin（是否登录） 和 userInfo（用户信息）。\r\n  2 从 utils 中导入 isAuth（登录状态）、getToken（获取token）。\r\n  3 创建方法 getUserInfo，用来获取个人资料。\r\n  4 在方法中，通过 isLogin 判断用户是否登录。\r\n  5 如果没有登录，则不发送请求，渲染未登录信息。\r\n  6 如果已登录，就根据接口发送请求，获取用户个人资料。\r\n  7 渲染个人资料数据。\r\n*/\r\n\r\nexport default class Profile extends Component {\r\n  state = {\r\n    // 是否登录\r\n    isLogin: isAuth(),\r\n    // 用户信息\r\n    userInfo: {\r\n      avatar: '',\r\n      nickname: ''\r\n    }\r\n  }\r\n\r\n  // 注意：不要忘了在进入页面时调用方法 ！\r\n  componentDidMount() {\r\n    this.getUserInfo()\r\n  }\r\n\r\n  // 退出\r\n  logout = () => {\r\n    alert('提示', '是否确定退出?', [\r\n      { text: '取消' },\r\n      {\r\n        text: '退出',\r\n        onPress: async () => {\r\n          // 调用退出接口\r\n          await API.post('/user/logout', null, {\r\n            headers: {\r\n              authorization: getToken()\r\n            }\r\n          })\r\n\r\n          // 移除本地token\r\n          removeToken()\r\n\r\n          // 处理状态\r\n          this.setState({\r\n            isLogin: false,\r\n            userInfo: {\r\n              avatar: '',\r\n              nickname: ''\r\n            }\r\n          })\r\n        }\r\n      }\r\n    ])\r\n  }\r\n\r\n  async getUserInfo() {\r\n    if (!this.state.isLogin) {\r\n      // 未登录\r\n      return\r\n    }\r\n\r\n    // 发送请求，获取个人资料\r\n    const res = await API.get('/user', {\r\n      headers: {\r\n        authorization: getToken()\r\n      }\r\n    })\r\n\r\n    // console.log(res)\r\n    if (res.data.status === 200) {\r\n      const { avatar, nickname } = res.data.body\r\n      this.setState({\r\n        userInfo: {\r\n          avatar: BASE_URL + avatar,\r\n          nickname\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props\r\n\r\n    const {\r\n      isLogin,\r\n      userInfo: { avatar, nickname }\r\n    } = this.state\r\n\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 个人信息 */}\r\n        <div className={styles.title}>\r\n          <img\r\n            className={styles.bg}\r\n            src={BASE_URL + '/img/profile/bg.png'}\r\n            alt=\"背景图\"\r\n          />\r\n          <div className={styles.info}>\r\n            <div className={styles.myIcon}>\r\n              <img\r\n                className={styles.avatar}\r\n                src={avatar || DEFAULT_AVATAR}\r\n                alt=\"icon\"\r\n              />\r\n            </div>\r\n            <div className={styles.user}>\r\n              <div className={styles.name}>{nickname || '游客'}</div>\r\n              {/* 登录后展示： */}\r\n              {isLogin ? (\r\n                <>\r\n                  <div className={styles.auth}>\r\n                    <span onClick={this.logout}>退出</span>\r\n                  </div>\r\n                  <div className={styles.edit}>\r\n                    编辑个人资料\r\n                    <span className={styles.arrow}>\r\n                      <i className=\"iconfont icon-arrow\" />\r\n                    </span>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className={styles.edit}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    inline\r\n                    onClick={() => history.push('/login')}\r\n                  >\r\n                    去登录\r\n                  </Button>\r\n                </div>\r\n              )}\r\n\r\n              {/* 未登录展示： */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 九宫格菜单 */}\r\n        <Grid\r\n          data={menus}\r\n          columnNum={3}\r\n          hasLine={false}\r\n          renderItem={item =>\r\n            item.to ? (\r\n              <Link to={item.to}>\r\n                <div className={styles.menuItem}>\r\n                  <i className={`iconfont ${item.iconfont}`} />\r\n                  <span>{item.name}</span>\r\n                </div>\r\n              </Link>\r\n            ) : (\r\n              <div className={styles.menuItem}>\r\n                <i className={`iconfont ${item.iconfont}`} />\r\n                <span>{item.name}</span>\r\n              </div>\r\n            )\r\n          }\r\n        />\r\n\r\n        {/* 加入我们 */}\r\n        <div className={styles.ad}>\r\n          <img src={BASE_URL + '/img/profile/join.png'} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}